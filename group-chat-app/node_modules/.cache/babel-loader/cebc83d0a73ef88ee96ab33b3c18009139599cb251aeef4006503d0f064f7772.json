{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Projects\\\\RaftlabsNodejsAssignment2\\\\group-chat-app\\\\src\\\\components\\\\chatApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\n//const socket = io('http://localhost:5000'); // Replace with your server URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  var socket;\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  useEffect(() => {\n    socket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n    // socket.emit(\"setup\", user);\n    // socket.on(\"connected\", () => setSocketConnected(true));\n    // socket.on(\"typing\", () => setIsTyping(true));\n    // socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n  const sendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      const newMessage = {\n        user: 'User',\n        // Replace this with the actual user name or ID\n        content: inputMessage\n      };\n      socket.emit('sendMessage', newMessage);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), \" \", message.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatApp, \"KBHhUo2NogTtDlYwiFq3Esqk+Dg=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ChatApp","_s","socket","messages","setMessages","inputMessage","setInputMessage","on","message","prevMessages","sendMessage","trim","newMessage","user","content","emit","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/My Projects/RaftlabsNodejsAssignment2/group-chat-app/src/components/chatApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n//const socket = io('http://localhost:5000'); // Replace with your server URL\r\n\r\nconst ChatApp = () => {\r\n    var socket;\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        socket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:5000');\r\n        // socket.emit(\"setup\", user);\r\n        // socket.on(\"connected\", () => setSocketConnected(true));\r\n        // socket.on(\"typing\", () => setIsTyping(true));\r\n        // socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (inputMessage.trim() !== '') {\r\n            const newMessage = {\r\n                user: 'User', // Replace this with the actual user name or ID\r\n                content: inputMessage,\r\n            };\r\n            socket.emit('sendMessage', newMessage);\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {messages.map((message, index) => (\r\n                    <div key={index}>\r\n                        <strong>{message.user}:</strong> {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,IAAIC,MAAM;EACV,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZM,MAAM,CAACK,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACrCJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGNZ,SAAS,CAAC,MAAM;IACZ,MAAMM,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;IAC1C;IACA;IACA;IACA;;IAEA;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIL,YAAY,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,MAAMC,UAAU,GAAG;QACfC,IAAI,EAAE,MAAM;QAAE;QACdC,OAAO,EAAET;MACb,CAAC;MACDH,MAAM,CAACa,IAAI,CAAC,aAAa,EAAEH,UAAU,CAAC;MACtCN,eAAe,CAAC,EAAE,CAAC;IACvB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EACKb,QAAQ,CAACc,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBACzBnB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,GAASR,OAAO,CAACK,IAAI,EAAC,GAAC;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACd,OAAO,CAACM,OAAO;MAAA,GAD3CI,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,YAAa;QACpBoB,QAAQ,EAAGC,CAAC,IAAKpB,eAAe,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACFvB,OAAA;QAAQ6B,OAAO,EAAElB,WAAY;QAAAM,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CApDID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}