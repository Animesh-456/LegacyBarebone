{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Projects\\\\RaftlabsNodejsAssignment2\\\\group-chat-app\\\\src\\\\components\\\\chatApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\n\n//const socket = io('http://localhost:5000'); // Replace with your server URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar socket;\nconst ENDPOINT = \"http://localhost:5000\";\nvar socket = io(ENDPOINT);\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const room = 'your-room-name'; // Replace with the room name you want to join\n\n  useEffect(() => {\n    socket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Join the specified room on component mount\n    socket.emit('joinRoom', room);\n    return () => {\n      // Leave the room when the component unmounts\n      socket.emit('leaveRoom', room);\n    };\n  }, [room]);\n  const sendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      const newMessage = {\n        user: 'User',\n        // Replace this with the actual user name or ID\n        content: inputMessage\n      };\n      socket.emit('sendMessage', newMessage, room);\n      setInputMessage('');\n    }\n  };\n  const hahdleview = () => {\n    setview(true);\n  };\n  const [view, setview] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hahdleview,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), view ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), \" \", message.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n_s(ChatApp, \"kjdbZGhVoQybocP1kua7qRQGyCs=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ENDPOINT","ChatApp","_s","messages","setMessages","inputMessage","setInputMessage","room","on","message","prevMessages","emit","sendMessage","trim","newMessage","user","content","hahdleview","setview","view","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/My Projects/RaftlabsNodejsAssignment2/group-chat-app/src/components/chatApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from \"socket.io-client\";\r\n\r\n//const socket = io('http://localhost:5000'); // Replace with your server URL\r\nvar socket;\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket = io(ENDPOINT);\r\nconst ChatApp = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const room = 'your-room-name'; // Replace with the room name you want to join\r\n\r\n    useEffect(() => {\r\n        socket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        // Join the specified room on component mount\r\n        socket.emit('joinRoom', room);\r\n\r\n        return () => {\r\n            // Leave the room when the component unmounts\r\n            socket.emit('leaveRoom', room);\r\n        };\r\n    }, [room]);\r\n\r\n    const sendMessage = () => {\r\n        if (inputMessage.trim() !== '') {\r\n            const newMessage = {\r\n                user: 'User', // Replace this with the actual user name or ID\r\n                content: inputMessage,\r\n            };\r\n            socket.emit('sendMessage', newMessage, room);\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    const hahdleview = () => {\r\n        setview(true)\r\n    }\r\n\r\n    const [view, setview] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={hahdleview}>Join Room</button>\r\n            </div>\r\n\r\n            {view ? (\r\n                <div>\r\n                    <div>\r\n                        {messages.map((message, index) => (\r\n                            <div key={index}>\r\n                                <strong>{message.user}:</strong> {message.content}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputMessage}\r\n                            onChange={(e) => setInputMessage(e.target.value)}\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (<></>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}