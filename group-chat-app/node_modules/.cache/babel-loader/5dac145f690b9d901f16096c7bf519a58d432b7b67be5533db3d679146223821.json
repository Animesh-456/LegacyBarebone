{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Projects\\\\RaftlabsNodejsAssignment2\\\\group-chat-app\\\\src\\\\components\\\\chatApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\n\n//const socket = io('http://localhost:5000'); // Replace with your server URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar socket;\nconst ENDPOINT = \"http://localhost:5000\";\nvar socket = io.connect(ENDPOINT);\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const room = 'Chat Group'; // Replace with the room name you want to join\n\n  const sendMessage = async () => {\n    if (inputMessage.trim() !== '') {\n      const newMessage = {\n        user: name,\n        // Replace this with the actual user name or ID\n        content: inputMessage\n      };\n      await socket.emit('sendMessage', newMessage, room, name);\n      //setMessages((prevMessages) => [...prevMessages, newMessage]);\n      setInputMessage('');\n    }\n  };\n  const hahdleview = async () => {\n    if (name != \"\") {\n      await socket.emit('joinRoom', name, room);\n      setview(true);\n    }\n    return;\n  };\n  const [view, setview] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [h1Elements, setH1Elements] = useState([]);\n  useEffect(() => {\n    socket.on('receiveMessage', (message, n) => {\n      // setMessages((prevMessages) => [...prevMessages, message]);\n      console.log(message);\n    });\n    console.log(\"set of messages\", messages);\n  }, [socket]);\n\n  // const handleButtonClick = () => {\n  //     setH1Elements((prevElements) => [...prevElements, <h1 key={prevElements.length}>Hello, this is an h1 element!</h1>]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hahdleview,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), view ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), h1Elements.map((h1Element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: h1Element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), \" \", message.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n_s(ChatApp, \"qpC2uVmAzL7cAJoR18g/5Poyy2w=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ENDPOINT","connect","ChatApp","_s","messages","setMessages","inputMessage","setInputMessage","room","sendMessage","trim","newMessage","user","name","content","emit","hahdleview","setview","view","setname","h1Elements","setH1Elements","on","message","n","console","log","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","h1Element","index","_c","$RefreshReg$"],"sources":["C:/My Projects/RaftlabsNodejsAssignment2/group-chat-app/src/components/chatApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from \"socket.io-client\";\r\n\r\n//const socket = io('http://localhost:5000'); // Replace with your server URL\r\nvar socket;\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket = io.connect(ENDPOINT);\r\nconst ChatApp = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const room = 'Chat Group'; // Replace with the room name you want to join\r\n\r\n    \r\n\r\n    const sendMessage = async () => {\r\n        if (inputMessage.trim() !== '') {\r\n            const newMessage = {\r\n                user: name, // Replace this with the actual user name or ID\r\n                content: inputMessage,\r\n            };\r\n            await socket.emit('sendMessage', newMessage, room, name);\r\n            //setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    const hahdleview = async () => {\r\n        if (name != \"\") {\r\n            await socket.emit('joinRoom', name, room);\r\n            setview(true)\r\n        }\r\n        return\r\n    }\r\n\r\n    const [view, setview] = useState(false)\r\n    const [name, setname] = useState(\"\");\r\n    const [h1Elements, setH1Elements] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('receiveMessage', (message, n) => {\r\n            // setMessages((prevMessages) => [...prevMessages, message]);\r\n            console.log(message)\r\n        });\r\n\r\n        console.log(\"set of messages\", messages)\r\n    }, [socket]);\r\n\r\n    // const handleButtonClick = () => {\r\n    //     setH1Elements((prevElements) => [...prevElements, <h1 key={prevElements.length}>Hello, this is an h1 element!</h1>]);\r\n    // };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setname(e.target.value)}\r\n                />\r\n                {/* <button onClick={sendMessage}>Send</button> */}\r\n                <button onClick={hahdleview}>Join Room</button>\r\n            </div>\r\n\r\n            {view ? (\r\n                <div>\r\n                    <h3>{room}</h3>\r\n\r\n                    {h1Elements.map((h1Element, index) => (\r\n                        <div key={index}>{h1Element}</div>\r\n                    ))}\r\n                    <div>\r\n                        {messages.map((message, index) => (\r\n                            <div key={index}>\r\n                                <strong>{message.user}:</strong> {message.content}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputMessage}\r\n                            onChange={(e) => setInputMessage(e.target.value)}\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (<></>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}